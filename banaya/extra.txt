import React, {useState, useEffect, useRef} from 'react';
import styled from "styled-components";
import { makeStyles } from '@material-ui/core/styles';
import Table from '@material-ui/core/Table';
import TableBody from '@material-ui/core/TableBody';
import TableCell from '@material-ui/core/TableCell';
import { TextField, Button, InputAdornment } from "@mui/material";
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { FaCheck, FaTimes } from "react-icons/fa";
import TableHead from '@material-ui/core/TableHead';
import TableRow from '@material-ui/core/TableRow';
import Paper from '@material-ui/core/Paper';
import { useDispatch, useSelector } from "react-redux";
import { getAllSubscriptionsEn } from '../../../features_en/SubscriptionPackage/subscriptionPackageSlice';

const useStyles = makeStyles({
    table: {
      minWidth: 650,
    },
  });

export default function Subscriptions() {
    const { subs, isLoading } = useSelector(
        (state) => state.subscriptionPackage
      );
    const dispatch = useDispatch();
    useEffect(() => {
        dispatch(getAllSubscriptionsEn());
        // eslint-disable-next-line
    }, [])
  // console.log(subs);
   const [subsc, setsubs] = useState([]);
   const [lookupsubsData, setLookupsubsData] = useState([]);
   let subsArrayData = [];
   if(subs !== null){
   subsArrayData = [
    { subsName: "Category", subsData: ["Creator Profile & Idea Book", "Add to Community", "Client's Review", "Project Limit", "Share Profile", "Priority Display Search", "Promotions", "Quotations", "Video Profile Preview", "Verification Discount", "Subscription", "New User"] },
    { subsName: "Starter", subsData: [subs.data[0].creatorProfileAndIdeaBook, subs.data[0].addToCommunity, subs.data[0].clientsReview, subs.data[0].projectLimit, subs.data[0].shareProfile, subs.data[0].priorityDisplaySearch, subs.data[0].promotion, subs.data[0].quotation, subs.data[0].videoProfilePreview, subs.data[0].verificationDiscount, subs.data[0].subscriptionTime, subs.data[0].newUser] },
    { subsName: "Silver", subsData: [subs.data[1].creatorProfileAndIdeaBook, subs.data[1].addToCommunity, subs.data[1].clientsReview, subs.data[1].projectLimit, subs.data[1].shareProfile, subs.data[1].priorityDisplaySearch, subs.data[1].promotion, subs.data[1].quotation, subs.data[1].videoProfilePreview, subs.data[1].verificationDiscount, subs.data[1].subscriptionTime, subs.data[1].newUser] },
    { subsName: "Gold", subsData: [subs.data[2].creatorProfileAndIdeaBook, subs.data[2].addToCommunity, subs.data[0].clientsReview, subs.data[0].projectLimit, subs.data[2].shareProfile, subs.data[2].priorityDisplaySearch, subs.data[2].promotion, subs.data[2].quotation, subs.data[2].videoProfilePreview, subs.data[2].verificationDiscount, subs.data[2].subscriptionTime, subs.data[2].newUser] }
  ];
}
  
   const NUMBER_OF_subsData_PER_BRANCH = 11;
   const firstLoad = useRef(true);

   useEffect(() => {
     if (firstLoad.current) {
       let bEmp = [];
       subsArrayData.forEach((el) => {
         bEmp.push(el.subsName);
       });
       setsubs(bEmp);
 
       let arrLp = [];
       for (let j = 0; j < NUMBER_OF_subsData_PER_BRANCH; j++) {
         let arrayLookup = [];
         for (let i = 0; i < subsArrayData.length; i++) {
           arrayLookup.push(subsArrayData[i].subsData[j]);
         }
         arrLp.push(arrayLookup);
       }
       setLookupsubsData(arrLp);
 
       firstLoad.current = false;
     }
   }, [setsubs, setLookupsubsData]);
  const [show, setShow] = useState(true);
  const [selectedData, setSelectedData] = useState({});
  const hanldeClick = (selectedRec) => {
    setSelectedData(selectedRec);
    setShow(true);
  };
  const hideModal = () => {
    setShow(false);
  };


    const classes = useStyles();
    return (
        <Wrapper>
        {show && subsc !==null &&
         <div className="modal display-block">
      <section className="modal-main">
      <Paper>
      {subsc.length > 0 && (
        <Table>
          <TableHead>
            <TableRow>
              {subsc.map((el) => (
                <TableCell style={{"fontSize": "15px", "fontStyle" : "bold"}}><b>{el}</b></TableCell>
              ))}
            </TableRow>
          </TableHead>
          <TableBody>
            {lookupsubsData.map((el, i) => (
              <>
              <TableRow key={i}>
                {el.map((emp) => {
                  if(emp === "true"){
                    return(
                      <TableCell style={{"fontSize": "12px"}}><FaCheck /></TableCell>
                    );
                  }
                  if(emp === true){
                    return(
                      <TableCell style={{"fontSize": "12px"}}><FaCheck/></TableCell>
                    );
                  }
                  if(emp === false){
                    return(
                      <TableCell style={{"fontSize": "12px"}}><FaTimes /></TableCell>
                    );
                  }
                  if(emp === "false" || emp === "No" || emp === "None"){
                    return(
                      <TableCell style={{"fontSize": "12px"}}><FaTimes /></TableCell>
                    );
                  }
                  else{
                    return(
                  <TableCell style={{"fontSize": "12px"}}>{emp}</TableCell>
                    );
                  }
                })}
              </TableRow>
              </>
            ))}
          </TableBody>
          <TableRow>
          <TableCell></TableCell>
                <TableCell  style={{"fontSize": "12px"}}><Button variant="contained">Let's Upgrade</Button></TableCell>
                <TableCell style={{"fontSize": "12px"}}><Button variant="contained">Let's Upgrade</Button></TableCell>
                <TableCell style={{"fontSize": "12px"}}><Button variant="contained">Let's Upgrade</Button></TableCell>
            </TableRow>
        </Table>
      )}

      
    </Paper>
      </section>
        <FaTimes onClick={hideModal} style={{"fontSize": "30px", "color" : "white"}}/>
      </div>
        }
      </Wrapper>
    );
  }
  const Wrapper = styled.section`
  .modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.6);
  }
  
  .modal-main {
    position: absolute;
    background: white;
    width: 80%;
    height: 100%;
    border-radius: 55px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  
  .display-block {
    display: block !important;
  }
  
  .display-none {
    display: none;
  }`
  ;

subscriptionPackage : 635212f2c45405a1bb5f68ef
  
  